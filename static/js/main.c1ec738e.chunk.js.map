{"version":3,"sources":["components/Filter.js","components/WarningPopUp.js","components/AddTask.js","components/TaskContent.js","components/Tasks.js","App.js","index.js"],"names":["Filter","props","useState","filterKeyword","setFilterKeyword","className","action","onSubmit","handleFilterForm","type","placeholder","name","onKeyDown","e","keyCode","temp","length","substring","searchTask","text","String","fromCharCode","toLowerCase","console","log","searchResult","map","item","_id","WarningPopUp","data","onClick","closeWarn","AddTask","warn","setWarn","preventDefault","target","taskName","value","description","content","setTimeout","axios","method","url","qs","stringify","headers","then","response","window","alert","message","addNewTask","catch","document","resetForm","reset","style","completed","backgroundColor","notCompleted","TaskContent","taskCompleted","setTaskCompleted","updateBox","setUpdateBox","removeTask","createdAt","updatedAt","display","justifyContent","updateTask","required","Tasks","task","setTask","useEffect","fetch","res","json","err","searchText","filter","searchData","newTask","arr","index","i","splice","App","setNewTask","setSearchText","setSearchResult","filterTask","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1ec738e.chunk.js","sourcesContent":["import {useState} from 'react';\r\nfunction Filter(props){\r\n    const [filterKeyword,setFilterKeyword]=useState(\"\");\r\n    const handleFilter=(e)=>{\r\n        //e.preventDefault();\r\n        if(e.keyCode===8){\r\n            let temp=filterKeyword;\r\n            if(temp.length<=0){\r\n                return\r\n            }\r\n            temp=temp.substring(0,temp.length-1);\r\n            setFilterKeyword(temp);\r\n            props.searchTask(temp);\r\n            return\r\n        }\r\n        \r\n        let text = filterKeyword+String.fromCharCode(e.keyCode).toLowerCase();\r\n        setFilterKeyword(text);\r\n        console.log(text);\r\n        if(text.length>=3){\r\n            props.searchTask(text);\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"filter-container\">\r\n            <form action='#' onSubmit={props.handleFilterForm}>\r\n                <input type=\"text\" placeholder=\"Enter keyword\" name=\"filterTask\" onKeyDown={handleFilter}/>\r\n                <button>Search </button>\r\n            </form>\r\n            <div>\r\n                {\r\n                    props.searchResult.map((item)=>{\r\n                        return (\r\n                        <div className=\"search-result\"key={item._id}> {item.name}</div>\r\n                        )\r\n\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Filter;","function WarningPopUp(props){\r\n    return(\r\n        <div className=\"warning-container\">\r\n            <h2>WARNING</h2>\r\n            <div>\r\n                {props.data}\r\n            </div>\r\n            {/*------------close button for warning popup-----------*/}\r\n            <span className=\"close-warning-box\" onClick={props.closeWarn}>\r\n                X\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\nexport default WarningPopUp;","import WarningPopUp from './WarningPopUp';\r\nimport {useState} from 'react';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nfunction AddTask(props){\r\n    const [warn,setWarn]=useState();\r\n    //add new task\r\n    const add=(e)=>{\r\n        //avoid default events happening\r\n        e.preventDefault();\r\n        const name=e.target.taskName.value;\r\n        const description=e.target.content.value;\r\n        //show warning if task name not exists\r\n        if(name.length<=0){\r\n            setWarn(\"Enter name or description of task\");\r\n            setTimeout(function(){\r\n                console.log(\"name\");\r\n                setWarn()\r\n            },5000);\r\n            \r\n            return\r\n        }\r\n        //show warning if task description not exists\r\n        if(description.length<=0){\r\n            setWarn(\"Enter name or description of task\");\r\n            setTimeout(function(){\r\n                console.log(\"desc\");\r\n                setWarn()\r\n            },5000);\r\n            return\r\n        }\r\n        //create a data (task) in backend\r\n        axios({\r\n            method: \"post\",\r\n            url: \"http://localhost:80/create\",\r\n            data: qs.stringify({name:name,content:description}),\r\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n          })\r\n            .then(function (response) {\r\n              //handle success\r\n              window.alert(response.data.message);\r\n              props.addNewTask(response.data.data);\r\n            })\r\n            .catch(function (response) {\r\n              //handle error\r\n              window.alert(\"data already exists\");\r\n            });\r\n            //reset form \r\n            document.resetForm?.reset();\r\n    }\r\n    //close warning popup\r\n    const closeWarn=()=>{\r\n        setWarn();\r\n    }\r\n    return(\r\n        <div className=\"addTask-container\">\r\n            {/*-------add task form-----------*/}\r\n            <form className=\"addTask-form\" action=\"#\" onSubmit={add} name=\"resetForm\">\r\n                <input type=\"text\" name=\"taskName\" placeholder=\"Enter task name\"/>\r\n                <input type=\"text\" name=\"content\" placeholder=\"Enter description\"/>\r\n                <button>Add Task</button>\r\n            </form>\r\n            {   \r\n            //warning popup\r\n                warn && <WarningPopUp data={warn} closeWarn={closeWarn}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default AddTask;","import {useState} from 'react';\r\nimport WarningPopUp from './WarningPopUp';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nfunction TaskContent(props){\r\n    //state for checking task completed or not\r\n    const [taskCompleted,setTaskCompleted]=useState(false);\r\n    const [updateBox,setUpdateBox]=useState(false);\r\n    const [warn,setWarn]=useState();\r\n    //handle change task status\r\n    const taskStatus=()=>{\r\n        if(taskCompleted){\r\n            setTaskCompleted(false);\r\n        }else{\r\n            setTaskCompleted(true);\r\n        }\r\n    }\r\n    // handle delete event\r\n    const deleteTask=()=>{\r\n        //check task is completed or not\r\n        if(!taskCompleted){\r\n            setWarn(\"Task not completed please complete before delete\");\r\n            //close automatically warning popup\r\n            setTimeout(function(){\r\n                setWarn();\r\n            },4000)\r\n            return\r\n        }\r\n        axios({\r\n            method: \"delete\",\r\n            url: `http://localhost:80/delete/${props.data._id}`,\r\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n          })\r\n            .then(function (response) {\r\n              //handle success\r\n              //remove task from ui \r\n              props.removeTask(props.data);\r\n              window.alert(response.data.message);\r\n\r\n            })\r\n            .catch(function (response) {\r\n              //handle error\r\n              window.alert(\"Error in deleting task\");\r\n            });\r\n    }\r\n    //showing update container\r\n    const showUpdateBox=()=>{\r\n        setUpdateBox(true);\r\n    }\r\n    // closing update container\r\n    const closeUpdateBox=()=>{\r\n        setUpdateBox(false);\r\n    }\r\n    //handle update evemnt\r\n    const handleUpdate=(e)=>{\r\n        e.preventDefault();\r\n        const name=e.target.taskName.value;\r\n        const description=e.target.content.value;\r\n        axios({\r\n            method: \"post\",\r\n            url: `http://localhost:80/update/${props.data._id}`,\r\n            data: qs.stringify({name:name,content:description}),\r\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n          })\r\n            .then(function (response) {\r\n              //handle success\r\n              window.alert(response.data.message);\r\n              //update in ui\r\n              props.updateTask(response.data.data);\r\n            })\r\n            .catch(function (response) {\r\n              //handle error\r\n              window.alert(\"Error in update\");\r\n            });\r\n            //reset form \r\n            setUpdateBox(false);\r\n    }\r\n    //close warning popup \r\n    const closeWarn=()=>{\r\n        setWarn();\r\n    }\r\n    //console.log(\"pr=\",props.data)\r\n    return(\r\n        <div className=\"taskContent-container\">\r\n            <div>\r\n                {/*---------completed and not completed button ----------------*/}\r\n                <div className=\"checkCompleted\" style={taskCompleted?style.notCompleted:style.completed} onClick={taskStatus}>\r\n                    {taskCompleted?\"Completed\":\"Not Completed\"}\r\n                </div>\r\n                <div className='update-delete-container'>\r\n                    {/*------delete button ----------*/}\r\n                    <div onClick={deleteTask}>\r\n                        Delete\r\n                    </div>\r\n                    {/*------open update container----------*/}\r\n                    <div onClick={showUpdateBox}>\r\n                        Update\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/*----------showing task container------------*/}\r\n            <div className=\"display-content\">\r\n                Name : {props.data.name}\r\n                <hr />\r\n                Description : {props.data.content}\r\n            </div>\r\n            {/*----------------tooltip---------------*/}\r\n            <div className='tooltip'>\r\n                <div>Created date : {props.data.createdAt.substring(0,10)}</div>\r\n                <div>Created time : {props.data.createdAt.substring(11,16)}</div>\r\n                <div>Last updated date : {props.data.updatedAt.substring(0,10)}</div>\r\n                <div>Last updated time : {props.data.updatedAt.substring(11,16)}</div>\r\n            </div>\r\n            {/*----------update container for updating task-----------*/}\r\n            { updateBox &&\r\n                <div className='update-container'>\r\n                    <h2 style={{display:\"flex\",justifyContent:\"center\"}}>Update Task</h2>\r\n                    <form action=\"#\" onSubmit={handleUpdate} name=\"resetUpdateForm\">\r\n                        <input type=\"text\" name=\"taskName\" placeholder={props.data.name} required/>\r\n                        <input type=\"text\" name=\"content\" placeholder={props.data.content.substring(0,15)+\"...\"} required/>\r\n                        <button>Submit</button>\r\n                    </form>\r\n                    {/*=----------closing button of update container-----------*/}\r\n                    <div className='closeUpdate-button' onClick={closeUpdateBox}>\r\n                        X\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                warn && <WarningPopUp data={warn} closeWarn={closeWarn}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst style={\r\n    completed:{\r\n        backgroundColor:\"green\",\r\n    },\r\n    notCompleted:{\r\n        backgroundColor:\"red\"\r\n    }\r\n}\r\nexport default TaskContent;","import {useState} from 'react';\r\nimport {useEffect} from 'react';\r\nimport TaskContent from './TaskContent';\r\nfunction Tasks(props){\r\n    //state for tasks\r\n    const [task,setTask]=useState([]);\r\n    //fetch tasks for first time\r\n    useEffect(()=>{\r\n        fetch('http://localhost:80/fetch')\r\n        .then((res)=>res.json())\r\n        .then((data)=>{\r\n            setTask(data.data);\r\n        })\r\n        .catch((err)=>console.log(err));\r\n    },[])\r\n    //filter task\r\n    useEffect(()=>{\r\n        if(props.searchText==\"all\"){\r\n            props.searchData(task);\r\n            return;\r\n        }\r\n        const temp=task.filter((item)=>{\r\n            return item.name.substring(0,props.searchText.length)==props.searchText;\r\n        })\r\n        props.searchData(temp);\r\n    },[props.searchText])\r\n    //update task state when new task added\r\n    useEffect(()=>{\r\n        {props.newTask && setTask(task => [...task,props.newTask])}\r\n    },[props.newTask]);\r\n    //handle remove task event\r\n    const removeTask=(data)=>{\r\n        let arr=[...task];\r\n        let index=0;\r\n        for(let i=0;i<arr.length;i++){\r\n            //check removal task for removing from task state\r\n            if(arr[i]._id==data._id){\r\n                index=i;\r\n                break;\r\n            }\r\n        }\r\n        arr.splice(index, 1);\r\n        setTask(arr);\r\n    }\r\n    //handle update event\r\n    const updateTask=(data)=>{\r\n        let arr=[...task];\r\n        console.log(\"upst=\",data);\r\n        for(let i=0;i<arr.length;i++){\r\n            if(arr[i]._id==data._id){\r\n                arr[i]=data;\r\n                break;\r\n            }\r\n        }\r\n        setTask(arr);\r\n    }\r\n    return(\r\n        <div className=\"tasks-container\">\r\n            {\r\n                task.map((item)=>{\r\n                    return <TaskContent data={item} removeTask={removeTask} updateTask={updateTask} key={item._id}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Tasks;","import Filter from './components/Filter';\nimport AddTask from './components/AddTask';\nimport Tasks from './components/Tasks';\nimport {useState} from 'react';\nfunction App() {\n  //state for adding new task\n  const [newTask,setNewTask]=useState();\n  //state for filter search\n  const [searchText,setSearchText]=useState();\n  const [searchResult,setSearchResult]=useState([]);\n  //function  for adding new task\n  const addNewTask=(data)=>{\n    setNewTask(data);\n  }\n  const searchTask=(data)=>{\n    if(data.length<3){\n      return\n    }\n    setSearchText(data);\n  }\n  //search data take i/p from filter input element\n  const searchData=(data) => {\n    setSearchResult(data);\n  }\n\n  const handleFilterForm=(e)=>{\n    e.preventDefault();\n    const filterTask=e.target.filterTask.value;\n    if(filterTask.length<3){\n      setSearchText(\"all\");\n    }else{\n      setSearchText(filterTask);\n    }\n}\n  return (\n    <div className=\"App\">\n      <h1>To do app</h1>\n      <Filter searchTask={searchTask} searchResult={searchResult} handleFilterForm={handleFilterForm}/>\n      <AddTask addNewTask={addNewTask} />\n      <Tasks newTask={newTask} searchText={searchText} searchData={searchData}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}